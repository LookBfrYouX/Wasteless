/*
This is a modification of btn-outline since it is hard to read with the gradient background
*/

@mixin button-white-bg-variant($color, $color-hover: color-yiq($color), $active-background: $color, $active-border: $color) {
  color: $color;
  border-color: $color;
  background-color: $slightly-transparent-white; // <-- this is what was modified

  @include hover() {
    color: $color-hover;
    background-color: $active-background;
    border-color: $active-border;
  }

  &:focus,
  &.focus {
    box-shadow: 0 0 0 $btn-focus-width rgba($color, .5);
  }

  &.disabled,
  &:disabled {
    color: $color;
    background-color: $slightly-transparent-light-grey;
  }

  &:not(:disabled):not(.disabled):active,
  &:not(:disabled):not(.disabled).active,
  .show > &.dropdown-toggle {
    color: color-yiq($active-background);
    background-color: $active-background;
    border-color: $active-border;

    &:focus {
      @if $enable-shadows and $btn-active-box-shadow != none {
        @include box-shadow($btn-active-box-shadow, 0 0 0 $btn-focus-width rgba($color, .5));
      } @else {
        // Avoid using mixin so we can pass custom focus shadow properly
        box-shadow: 0 0 0 $btn-focus-width rgba($color, .5);
      }
    }
  }
}

// @mixin button-white-bg-variant($color, $color-hover: #fff) {
//   color: red; //$color;
//   background-color: $slightly-transparent-white;
//   background-image: none;
//   border-color: $color;

//   @include hover {
//     color: $color-hover;
//     background-color: $color;
//     border-color: $color;
//   }

//   &:focus,
//   &.focus {
//     box-shadow: 0 0 0 3px rgba($color, .5);
//   }

//   &.disabled,
//   &:disabled {
//     color: $color;
//     background-color: transparent;
//   }

//   &:active,
//   &.active,
//   .show > &.dropdown-toggle {
//     color: $color-hover;
//     background-color: $color;
//     border-color: $color;
//   }
// }

@each $color, $value in $theme-colors {
  .btn-white-bg-#{$color} {
    @include button-white-bg-variant($value, #fff);
  }
}
