# port used to listen to requests
# server.port=9499

#alternatively, use H2 (in-memory DB)
#spring.datasource.driverClassName=org.h2.Driver
## connection details
#spring.datasource.url=jdbc:h2:mem:testdb
#spring.datasource.username=sa
#spring.datasource.password=
## H2 needs a special dialect wrapper
#spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
## ask H2 to create / update the SQL schema at boot time (may be dangerous if used on real DB)
#spring.jpa.hibernate.ddl-auto=update
## enable GUI console (similar to myPHPAdmin)
#spring.h2.console.enabled=true
#spring.h2.console.path=/h2

## defining data source (MariaDB - SQL)
### connection details
#server.servlet.context-path=/test/api
#
spring.datasource.driver-class-name=org.mariadb.jdbc.Driver
spring.jpa.database-platform=org.hibernate.dialect.MariaDB103Dialect
spring.datasource.url=${DB_URL_TEST}
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}
spring.datasource.initialization-mode=always
spring.jpa.hibernate.ddl-auto=update

# enable GUI console (similar to myPHPAdmin)
# print SQL statements
spring.jpa.properties.hibernate.format_sql=true
# Include server error messages in JSON response
server.error.include-message=always
### DGAA PROPERTIES
# Set the DGAA scheduler interval
dgaa.scheduler.interval=${DGAA_SCHEDULER_DELAY_MS}
dgaa.user.email=${DGAA_EMAIL}
dgaa.user.password=${DGAA_PASSWORD}
spring.output.ansi.enabled=ALWAYS

api_request_min_delay_ms=5000